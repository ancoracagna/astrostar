from aiogram import Router, F, Bot
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command, CommandObject
from aiogram.types import Message, CallbackQuery, InputFile, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from app.db.requests import (set_user, get_refs, get_user_data, add_ref, add_check, get_check, get_horoscope, reg_event,
                             add_ref_event)
from app.keyboards import userpanel, comp_panel, result
from app.states import Compatibility
from app.utils.utils import get_refer_id, gen_res, gen_unique
from app.filters.main_filter import ADMINS as admins

router = Router()

universe_text = ('–ß—Ç–æ–± –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ—Ñ–∏–ª—å" –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π '
                 '–∫–æ–º–∞–Ω–¥–æ–π –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ –º–µ–Ω—é.')

@router.message(CommandStart())
async def cmd_start(message: Message, command: CommandObject, bot: Bot):
    user_info = await get_user_data(message.from_user.id)
    if user_info:
        response_text = f'{message.from_user.full_name}, –í–∏–∂—É —á—Ç–æ –≤—ã —É–∂–µ –≤ –º–æ–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º! ü•∞'
        await message.answer(text=response_text, reply_markup=userpanel)
        refer_id = get_refer_id(command.args)
        if refer_id:
            await add_ref_event(message.from_user.id, 'olduserstart', refer_id)
        else:
            refer_id = 0
            await add_ref_event(message.from_user.id, 'olduserstart', refer_id)
    else:
        refer_id = get_refer_id(command.args)
        print(f'ref: {refer_id}')
        if refer_id:
            await message.answer('‚ú® –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å! ‚ú®\n\n'
                                 '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç, –≥–¥–µ –º—ã –ø–æ–º–æ–≥–∞–µ–º –≤–∞–º —É–∑–Ω–∞—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤—ã —Å–æ–≤–º–µ—Å—Ç–∏–º—ã —Å –¥—Ä—É–≥–∏–º–∏ –ª—é–¥—å–º–∏, –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø—ã. üîÆüí´\n\n'
                                 '–ù–∞—à –±–æ—Ç –≥–æ—Ç–æ–≤ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à—É –∂–∏–∑–Ω—å —è—Ä—á–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ. üåüüë´\n\n'
                                 '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∂–µ–ª–∞–µ–º—ã–π —Ä–∞–∑–¥–µ–ª –∏ —É–∑–Ω–∞–π—Ç–µ % —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! üöÄüî≠\n\n'
                                 f'–í–∞—à–∏ –∑–≤–µ–∑–¥—ã –∂–¥—É—Ç! üå†üåå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {refer_id} –∫–∞–ø–Ω—É–ª–∞ –∑–≤–µ–∑–¥–æ—á–∫–∞ –∑–∞ –≤–∞—Å! ‚≠êÔ∏è',
                                 reply_markup=userpanel)
            await add_ref_event(message.from_user.id, 'newuser', refer_id)
        else:
            await message.answer('‚ú® –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å! ‚ú®\n\n'
                                 '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç, –≥–¥–µ –º—ã –ø–æ–º–æ–≥–∞–µ–º –≤–∞–º —É–∑–Ω–∞—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤—ã —Å–æ–≤–º–µ—Å—Ç–∏–º—ã —Å –¥—Ä—É–≥–∏–º–∏ –ª—é–¥—å–º–∏, –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø—ã. üîÆüí´\n\n'
                                 '–ù–∞—à –±–æ—Ç –≥–æ—Ç–æ–≤ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à—É –∂–∏–∑–Ω—å —è—Ä—á–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ. üåüüë´\n\n'
                                 '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∂–µ–ª–∞–µ–º—ã–π —Ä–∞–∑–¥–µ–ª –∏ —É–∑–Ω–∞–π—Ç–µ % —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!! üöÄüî≠\n\n'
                                 f'–í–∞—à–∏ –∑–≤–µ–∑–¥—ã –∂–¥—É—Ç! üå†üååÔ∏è',
                                 reply_markup=userpanel)
            refer_id = 0
            await add_ref_event(message.from_user.id, 'newuser', refer_id)
        await set_user(message.from_user.id, refer_id)
        try:
            await add_ref(refer_id)
        except:
            print('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ñ')
        for admin in admins:
            await bot.send_message(admin, '–£ –Ω–∞—Å –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
        try:
            await bot.send_sticker(refer_id,sticker=r'CAACAgIAAxkBAAEMcYRmiNpqfM5y7VhKNlm3ycmr23d0xQACn04AAvaYQEtotJWy5QHbAjUE')
            await bot.send_message(refer_id, text='*–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º\!* ü•≥\n–£ –≤–∞—Å –Ω–æ–≤–∞—è –∑–≤–µ–∑–¥–æ—á–∫–∞ ‚≠ê',parse_mode=ParseMode.MARKDOWN_V2)
        except:
            print('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')


@router.message(F.text == '–û—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É')
async def compatibility(message: Message, state: FSMContext):
    await state.clear()
    await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!', reply_markup= userpanel)

@router.message(F.text == '‚úèÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
async def help(message: Message):
    await message.answer('–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º - @genesisup')

@router.message(F.text == 'üë©‚Äç‚ù§Ô∏è‚Äçüë® –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å')
async def compatibility(message: Message, state: FSMContext):
    await state.set_state(Compatibility.firstinfo)
    await reg_event('–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å')
    await message.answer('_–ü—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞_\n_–ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–¥–Ω–∏—Ö –∏ —Ç–µ—Ö –∂–µ –ª—é–¥–µ–π –º–æ–≥—É –¥–∞–≤–∞—Ç—å –∏—Å–∫–∞–∂–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç_',parse_mode=ParseMode.MARKDOWN_V2)
    await message.answer_photo(photo=FSInputFile('example.png'), caption=''
                         '*–®–∞–≥ 1: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–≤–æ–º —á–µ–ª–æ–≤–µ–∫–µ*\n'
                         '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n\n'
                         '–ò–º—è: ‚úèÔ∏è\n'
                         '–í–æ–∑—Ä–∞—Å—Ç: üìÖ\n'
                         '–ü–æ–ª: üë§\n'
                         '–ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: ‚ôà‚ôâ‚ôä‚ôã‚ôå‚ôç‚ôé‚ôè‚ôê‚ôë‚ôí‚ôì\n\n'
                         '–ü—Ä–∏–º–µ—Ä: `–í–∏–∫—Ç–æ—Ä 21 –ú –í–µ—Å—ã` –∏–ª–∏ `–°–Ω–µ–∂–∞–Ω–∞ 16 –î ‚ôê`', parse_mode=ParseMode.MARKDOWN_V2, reply_markup=comp_panel)

@router.message(Compatibility.firstinfo)
async def compatibility_2(message: Message, state: FSMContext):
    await state.update_data(firstinfo=message.text)
    await state.set_state(Compatibility.firstimg)
    await message.answer('*–®–∞–≥ 2: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø–µ—Ä–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞* üì∏',parse_mode=ParseMode.MARKDOWN_V2)

@router.message(Compatibility.firstimg)
async def compatibility_3(message: Message, state: FSMContext):
    if message.photo:
        await state.update_data(firstimg=message.photo[-1].file_id)
        await state.set_state(Compatibility.secondinfo)
        await message.answer('*–®–∞–≥ 3: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ç–æ—Ä–æ–º —á–µ–ª–æ–≤–µ–∫–µ*\n'
                             '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n\n'
                             '–ò–º—è: ‚úèÔ∏è\n'
                             '–í–æ–∑—Ä–∞—Å—Ç: üìÖ\n'
                             '–ü–æ–ª: üë§\n'
                             '–ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: ‚ôà‚ôâ‚ôä‚ôã‚ôå‚ôç‚ôé‚ôè‚ôê‚ôë‚ôí‚ôì\n\n'
                             '–ü—Ä–∏–º–µ—Ä: `–í–∏–∫—Ç–æ—Ä 21 –ú –í–µ—Å—ã` –∏–ª–∏ `–°–Ω–µ–∂–∞–Ω–∞ 16 –î ‚ôê`',parse_mode=ParseMode.MARKDOWN_V2, reply_markup=comp_panel)
    else:
        await message.answer('–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é')


@router.message(Compatibility.secondinfo)
async def compatibility_4(message: Message, state: FSMContext):
    await state.update_data(secondinfo=message.text)
    await message.answer('*–®–∞–≥ 4: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤—Ç–æ—Ä–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞* üì∏',parse_mode=ParseMode.MARKDOWN_V2)
    await state.set_state(Compatibility.result)



@router.message(Compatibility.result)
async def compatibility_last(message: Message, state: FSMContext):
    if message.photo:
        await state.update_data(secondimg=message.photo[-1].file_id)
        data = await state.get_data()
        desc = str(data["firstinfo"]) + "_" + str(data["secondinfo"])
        unique = gen_unique()
        await message.answer_photo(photo=FSInputFile('result.png'),
                                   caption=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {data["firstinfo"]} –∏ '
                                   f'{data["secondinfo"]}', reply_markup= await result(message.from_user.id, unique))
        res = gen_res()
        await add_check(message.from_user.id, desc, res, unique)

        await state.clear()
    else:
        await message.answer('–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é')

@router.message(F.text=='ü™ê –ü—Ä–æ—Ñ–∏–ª—å')
async def profile(message: Message):
    refs = await get_refs(message.from_user.id)
    link = 'https://t.me/astrostar_bot?start='+str(message.from_user.id)
    await message.answer(f'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.full_name}\n‚≠êÔ∏è –ö–æ–ª-–≤–æ –∑–≤–µ–∑–¥–æ—á–µ–∫: {refs}\nüîó –í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è: {link}')

@router.message(F.text == 'üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø')
async def horoscope(message: Message):
    forecast = await get_horoscope()
    await reg_event('–ì–æ—Ä–æ—Å–∫–æ–ø')
    await message.answer(f'–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n{forecast}',parse_mode=ParseMode.MARKDOWN_V2)

@router.callback_query(F.data.startswith('result_'))
async def get_result(callback: CallbackQuery):
    await callback.answer('–£—Å–ø–µ—à–Ω–æ!')
    data = callback.data.split('_')
    refs = await get_refs(data[1])
    count = 3-refs
    link = 'https://t.me/astrostar_bot?start=' + str(data[1])
    if count >0:
        await callback.message.answer(f'–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –µ—â–µ {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {refs} ‚≠êÔ∏è\n\n–í–∞—à–∞ —Å—Å—ã–ª–∫–∞: {link}', reply_markup=userpanel)
    else:
        msg = await get_check(data[2])
        await callback.message.answer(f'{msg}',parse_mode=ParseMode.MARKDOWN_V2, reply_markup=userpanel)